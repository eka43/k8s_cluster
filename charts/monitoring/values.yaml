# Default values for monitoring.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

falco:
#  falcosidekick:
#    enabled: true
#    webui:
#      enabled: true
      # config:
      # alertmanager:
      #  hostport: 9093
      # webui:
      #  url: "http://localhost:2802/ui"
  fakeEventGenerator:
    enabled: false
  falco: 
    jsonOutput: true
    jsonIncludeOutputProperty: true
    logLevel: debug
    httpOutput:
      enabled: true
      url: "http://falcosidekick.local"
    programOutput:
      enabled: true
      keepAlive: true
      program: "jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/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"

falcosidekick:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: public
      #  kubernetes.io/tls-acme: "true"
    hosts:
      - paths: [/]

  webui:
    enabled: true
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: public
      # kubernetes.io/tls-acme: "true"

  config:
    slack:
      webhookurl: "https://hooks.slack.com/services/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" # Slack WebhookURL (ex: https://hooks.slack.com/services/XXXX/YYYY/ZZZZ), if not empty, Slack output is enabled
      #footer: "" # Slack footer
      #icon: "" # Slack icon (avatar)
      #username: "" # Slack username (default: Falcosidekick)
      outputformat: "all" # all (default), text, fields
      minimumpriority: "debug" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or "" (default)
      messageformat: 'Alert : rule *{{ .Rule }}* triggered by user *{{ index
      .OutputFields "user.name" }}*' # a Go template to format Slack Text above Attachment, displayed in addition to the output from `SLACK_OUTPUTFORMAT`, see [Slack Message Formatting](#slack-message-formatting) in the README for details. If empty, no Text is displayed before Attachment.
      

kubewatch:
  slack:
    enabled: true
    channel: "testing-kubewatch"
    token: "xoxb-2286818715605-2407140887444-BAI3rs5C1QXlSaIA7U9XFGi4"

  namespaceToWatch: ""
  resourcesToWatch:
    deployment: true
    replicationcontroller: true
    replicaset: true
    daemonset: true
    services: true
    pod: true
    job: true
    node: false
    clusterrole: true
    serviceaccount: true
    persistentvolume: true
    namespace: true
    secret: true
    configmap: false
    ingress: true
  rbac:
    create: true

#prometheus:
#  alerting:
#    alertmanagers:
#    - static_configs:
#      - targets:
#        - localhost:9093
